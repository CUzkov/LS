version: '3.3'

services:
  redis:
    build: ./backend/redis
    restart: unless-stopped
    ports:
      - ${REDIS_PORT}:6379
    volumes:
      - ${REDIS_VOLUME_PATH}:/data
  
  database:
    build: ./backend/database
    restart: unless-stopped
    volumes:
      - ${PG_VOLUME_PATH}:/var/lib/postgresql/data
    ports:
      - ${PG_PORT}:5432
    environment:
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_PASSWORD=${PG_PASSWORD}
      - POSTGRES_DB=${PG_DB}
    
  server:
    build:
      context: .  
      dockerfile: ./backend/server/Dockerfile
    restart: unless-stopped
    depends_on:
      - database
      - redis
    network_mode: host
    volumes:
      - /server-data:/repositories
    environment:
      PROD_ENV: 1
      PATH_TO_REPOSITORIES: ${PATH_TO_REPOSITORIES}
      BACKEND_HOST: ${BACKEND_HOST}
      BACKEND_PORT: ${BACKEND_PORT}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_HOST: ${REDIS_HOST}
      PG_PORT: ${PG_PORT}
      PG_HOST: ${PG_HOST}
      PG_USER: ${PG_USER}
      PG_DB: ${PG_DB}
      PG_PASSWORD: ${PG_PASSWORD}
      GIT_DISCOVERY_ACROSS_FILESYSTEM: 1

  spa:
    build:
      context: .  
      dockerfile: ./frontend/Dockerfile
    restart: unless-stopped
    depends_on:
      - database
      - redis
    network_mode: host
    environment:
      PROD_ENV: 1
